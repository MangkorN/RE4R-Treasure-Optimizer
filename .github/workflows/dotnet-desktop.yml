name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
            artifact_name: RE4R-Treasure-Optimizer-win-x64
          - os: ubuntu-latest
            rid: linux-x64
            artifact_name: RE4R-Treasure-Optimizer-linux-x64
          - os: macos-latest
            rid: osx-x64
            artifact_name: RE4R-Treasure-Optimizer-osx-x64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Publish Application
      run: dotnet publish RE4R-Treasure-Optimizer -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true

    - name: Archive Build (Windows)
      if: runner.os == 'Windows'
      run: |
        New-Item -ItemType Directory -Force -Path artifacts
        Compress-Archive -Path "RE4R-Treasure-Optimizer\bin\Release\net6.0\${{ matrix.rid }}\publish\*" -DestinationPath "artifacts\${{ matrix.artifact_name }}.zip"
      shell: pwsh

    - name: Archive Build (Linux and macOS)
      if: runner.os != 'Windows'
      run: |
        mkdir -p artifacts
        zip -j artifacts/${{ matrix.artifact_name }}.zip RE4R-Treasure-Optimizer/bin/Release/net6.0/${{ matrix.rid }}/publish/*
      shell: bash

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: artifacts/${{ matrix.artifact_name }}.zip

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: 'artifacts/*.zip'
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref }}
        name: Release ${{ github.ref }}
        draft: false
        prerelease: false
